<attributes>
<!-- =====================================================================
     Contains the definition of attributes that are only available on
     openpower systems for a PowerVM build.  This file is only compiled when
     CONFIG_XML_INCLUDE_OPPOWERVM is set to true and is always false on
     FSP based systems.
     =====================================================================
-->
<attribute>
    <id>PROC_HW_TOPOLOGY</id>
    <description>Hardware topology for HDAT
        creator:MRW
        consumer:HDAT
        firmware notes:
        Hardware Topology 2 Bytes
        Byte 1:
            bit 0-3: Node Id
            bit 4-7: Socket id inside the node
            bit 8-11: Proc id inside socket
            bit 12-15:Hub Id inside proc
    </description>
    <simpleType>
        <uint16_t>
        </uint16_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>
<enumerationType>
    <id>CHIP_VER</id>
    <description>Enumeration indicating the chip version</description>
    <enumerator>
        <name>DD10</name>
        <value>0x10</value>
    </enumerator>
    <enumerator>
        <name>DD11</name>
        <value>0x11</value>
    </enumerator>
    <enumerator>
        <name>DD20</name>
        <value>0x20</value>
    </enumerator>
    <enumerator>
        <name>DD21</name>
        <value>0x21</value>
    </enumerator>
    <default>DD10</default>
</enumerationType>
<enumerationType>
    <id>HW_VER</id>
    <description>Enumeration indicating the chip HW version</description>
    <enumerator>
        <name>FSP_HW_VER</name>
        <value>0x2</value>
    </enumerator>
    <enumerator>
        <name>BMC_HW_VER</name>
        <value>0x3</value>
    </enumerator>
    <default>BMC_HW_VER</default>
</enumerationType>
<enumerationType>
    <id>SW_VER</id>
    <description>Enumeration indicating the SW version</description>
    <enumerator>
        <name>FSP_SW_VER</name>
        <value>0x1</value>
    </enumerator>
    <enumerator>
        <name>BMC_SW_VER</name>
        <value>0x2</value>
    </enumerator>
    <default>BMC_SW_VER</default>
</enumerationType>
<enumerationType>
    <id>ROLE</id>
    <description>Enumeration indicating the master's FSI type</description>
    <enumerator>
        <name>PRIMARY</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>BACKUP</name>
        <value>0</value>
    </enumerator>
    <default>PRIMARY</default>
</enumerationType>
<attribute>
    <id>CHIP_VER</id>
    <description>Attribute indicating the target's chip version</description>
    <simpleType>
        <enumeration>
            <id>CHIP_VER</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>
<attribute>
    <id>HW_VER</id>
    <description>Attribute indicating the target's hw version</description>
    <simpleType>
        <enumeration>
            <id>HW_VER</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>
<attribute>
    <id>SW_VER</id>
    <description>Attribute indicating the target's software version</description>
    <simpleType>
        <enumeration>
            <id>SW_VER</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>
<attribute>
    <id>ROLE</id>
    <description>Attribute indicating the target's role</description>
    <simpleType>
        <enumeration>
            <id>ROLE</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>
<attribute>
    <id>PHYP_SYSTEM_TYPE</id>
    <description>PHYP system type value for habanero
            and barreleye (0x3015 and 0x3016 respectively).
            The value is updated in the system xml.
    </description>
    <simpleType>
        <uint32_t>
        </uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute>
<attribute>
    <id>ASCII_VPD_LX_KEYWORD</id>
    <description>LX keyword VPD data for HDAT module
    </description>
    <simpleType>
        <uint64_t>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute>
<attribute>
    <id>HDAT_I2C_ENGINE</id>
    <description>
        This attribute holds the values of the I2C Engine from the i2c device
        connections as defined in the MRW.  It is parsed into a struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_MASTER_PORT</id>
    <description>
        This attribute holds the values of the I2C Master Port from the i2c
        device connections as defined in the MRW.  It is parsed into a
        struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_DEVTYPE</id>
    <description>
        This attribute holds the values of the I2C device type from the i2c
        device connections as defined in the MRW.  It is parsed into a
        struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_ADDR</id>
    <description>
        This attribute holds the values of the I2C address from the i2c
        device connections as defined in the MRW.  It is parsed into a
        struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_SLAVE_PORT</id>
    <description>
        This attribute holds the values of the I2C slave port from the i2c
        device connections as defined in the MRW.  It is parsed into a
        struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_BUS_FREQ</id>
    <description>
        This attribute holds the values of the I2C bus frequency in Hz from
        the i2c device connections as defined in the MRW.  It is parsed
        into a struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_DEV_PURPOSE</id>
    <description>
        This attribute holds the values of the I2C device purpose from the i2c
        device connections as defined in the MRW.  It is parsed into a
        struct in i2c.C
    </description>
    <simpleType>
        <uint8_t/>
        <array>32</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute><attribute>
    <id>HDAT_I2C_ELEMENTS</id>
    <description>
        This attribute holds the number of elements that were found under this
        particular target, and how many devices are stored in the arrays.
    </description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute></attributes>